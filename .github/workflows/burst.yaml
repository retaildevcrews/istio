name: Build Burst-Service

on:
  schedule:
    # Run Sunday at 6:00 AM UTC
    - cron: "0 6 * * 0"

  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
    - main
    types:
    - opened
    - synchronize
    paths:
    - 'burstsvc/burst/Dockerfile'
    - 'burstsvc/burst/*.csproj'
    - 'burstsvc/burst/**.cs'
    - '.github/workflows/burst.yaml'
    - 'autogitops/**'

  push:
    branches:
      - main

    paths:
    - 'burstsvc/burst/Dockerfile'
    - 'burstsvc/burst/*.csproj'
    - 'burstsvc/burst/**.cs'
    - '.github/workflows/burst.yaml'
    - 'autogitops/**'

jobs:

  build:

    runs-on: ubuntu-20.04
    env:
      DOCKER_REPO: ghcr.io/retaildevcrews/burst-metrics-service

    steps:
    - name: Login to Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.GHCR_ID }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Check out code
      uses: actions/checkout@v2

    - name: Docker Build
      run: |
        docker build ./burstsvc/ -f ./burstsvc/burst/Dockerfile --build-arg BUILD_ENV=unittest --progress auto -t image
    
    - name: Grype Scan Image for Vulnerabilities
      uses: anchore/scan-action@v3
      id: grype
      with:
        image: "image"
        severity-cutoff: critical
        acs-report-enable: true
        fail-build: true

    - name: Upload Grype Vulnerability SARIF report
      if: always()
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.grype.outputs.sarif }}

    - name: Docker Tag and Push
      if: github.event_name == 'push' # Push the image only on git push
      run: |
        # tag the repo with :beta
        docker tag image $DOCKER_REPO:beta
        # Push to the repo
        docker push -a $DOCKER_REPO
