{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build burst service",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/burstsvc/burst/Ngsa.BurstService.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "publish burst service",
            "command": "dotnet",
            "type": "process",
            "args": [
                "publish",
                "${workspaceFolder}/burstsvc/burst/Ngsa.BurstService.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "watch burst service",
            "command": "dotnet",
            "type": "process",
            "args": [
                "watch",
                "run",
                "--project",
                "${workspaceFolder}/burstsvc/burst/Ngsa.BurstService.csproj"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "build burst service test",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/burstsvc/burst.tests/Ngsa.BurstService.Test.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "burst svc unittest",
            "type": "process",
            "command": "bash",
            "isTestCommand": true,
            "args": [
                "-c","dotnet test ${workspaceFolder}/burstsvc/burst.tests --collect:'XPlat Code Coverage' --logger 'console;verbosity=normal' --filter 'Category=UnitTest'"
            ],
            "problemMatcher": ["$msCompile"]
        },
        {
            "label": "burst svc unittest (with coverage)",
            "dependsOn" : "burst svc unittest",
            "type": "process",
            "command": "bash",
            "isTestCommand": true,
            "args": [
                "-c",
                "${workspaceFolder}/burstsvc/burst.tests/gen_coverage_report.sh"], // 
            "problemMatcher": ["$msCompile"]
        },
        {
            "label": "SubTask-Run Checkov image",
            "type": "shell",
            "command": "docker run -it --name checkov-lr -v /workspaces/ngsa-app:/ngsa-app --rm bridgecrew/checkov -d /ngsa-app --output-file-path /ngsa-app --framework 'kubernetes' 'dockerfile' ; returncode=$?; mv results_cli.txt checkov_scan_results.txt; echo ' '; echo '-------------------------- Checkov Results Summary --------------------------';echo ' ';sed -n '/results:/{p;n;n;N;p;n;n;}' checkov_scan_results.txt;echo ' ';echo '-------------------------- Checkov Results Summary --------------------------';echo ' '; code -r ${workspaceFolder}/checkov_scan_results.txt;echo Scan Complete - Please review 'checkov_scan_results.txt' for details.; exit $returncode"
        },
        {
            "label": "Run Checkov Scan",
            "dependsOrder": "sequence",
            "dependsOn": ["SubTask-Run Checkov image"],
            "problemMatcher": []
        }
    ]
}
